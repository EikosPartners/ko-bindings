{"version":3,"sources":["../src/fontIcon.js"],"names":[],"mappings":";;;;AAAA;;AACA;;;;;;AAEA,mBAAG,eAAH,CAAmB,QAAnB,GAA8B;AAC1B,UAAM,cAAU,OAAV,EAAmB,aAAnB,EAAkC;AACpC,YAAI,SAAS,+BAAiB,aAAjB,KAAmC,IAAhD;;AAEA,YAAI,UAAU,CAAC,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,MAA3B,CAAf,EAAmD;AAC/C,oBAAQ,SAAR,CAAkB,GAAlB,CAAsB,MAAtB;AACH;AACJ,KAPyB;AAQ1B,YAAQ,gBAAU,OAAV,EAAmB,aAAnB,EAAkC;AACtC,YAAI,SAAS,+BAAiB,aAAjB,KAAmC,IAAhD;AACA,YAAI,YAAY,eAAhB;AACA,YAAI,UAAU,QAAQ,SAAtB;AACA,YAAI,sBAAJ;;AAEA,YAAI,OAAO,SAAP,KAAqB,QAAzB,EAAmC;AAC/B,wBAAY,SAAS,GAAT,GAAe,SAA3B;AACA,4BAAgB,mBAAG,KAAH,CAAS,OAAT,CAAiB,GAAjB,CAAqB,OAArB,EAA8B,eAA9B,CAAhB;;AAEA;AACA,gBAAI,iBAAiB,kBAAkB,SAAnC,IAAgD,QAAQ,QAAR,CAAiB,aAAjB,CAApD,EAAqF;AACjF,wBAAQ,MAAR,CAAe,aAAf;AACH;;AAED,gBAAI,CAAC,QAAQ,QAAR,CAAiB,SAAjB,CAAL,EAAkC;AAC9B,wBAAQ,GAAR,CAAY,SAAZ;AACH;;AAED,+BAAG,KAAH,CAAS,OAAT,CAAiB,GAAjB,CAAqB,OAArB,EAA8B,eAA9B,EAA+C,SAA/C;AACH;;AAED,YAAI,QAAO,SAAP,yCAAO,SAAP,OAAqB,QAAzB,EAAmC;AAC/B,mBAAO,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,UAAS,GAAT,EAAc;AACzC,0BAAU,SAAS,GAAT,GAAe,GAAzB,IAAgC,UAAU,GAAV,CAAhC;AACA,uBAAO,UAAU,GAAV,CAAP;AACH,aAHD;;AAMA,mBAAO,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,UAAS,GAAT,EAAa;AACxC,oBAAI,QAAQ,QAAR,CAAiB,GAAjB,KAAyB,CAAC,mBAAG,MAAH,CAAU,UAAU,GAAV,CAAV,CAA9B,EAAyD;AACrD,4BAAQ,MAAR,CAAe,GAAf;AACF,iBAFF,MAEQ,IAAI,CAAC,QAAQ,QAAR,CAAiB,GAAjB,CAAD,IAA0B,mBAAG,MAAH,CAAU,UAAU,GAAV,CAAV,CAA9B,EAAyD;AAC5D,4BAAQ,GAAR,CAAY,GAAZ;AACH;AACL,aAND;AAOH;AACJ;AA7CyB,CAA9B","file":"fontIcon.js","sourcesContent":["import { globalMetadata } from 'scalejs.metadataFactory';\r\nimport ko from 'knockout';\r\n\r\nko.bindingHandlers.fontIcon = {\r\n    init: function (element, valueAccessor) {\r\n        let prefix = globalMetadata()['font-prefix'] || 'fa';\r\n\r\n        if (prefix && !element.classList.contains(prefix)) {\r\n            element.classList.add(prefix);\r\n        }\r\n    },\r\n    update: function (element, valueAccessor) {\r\n        let prefix = globalMetadata()['font-prefix'] || 'fa';\r\n        let iconClass = valueAccessor();\r\n        let classes = element.classList;\r\n        let previousClass;\r\n\r\n        if (typeof iconClass === 'string') {\r\n            iconClass = prefix + '-' + iconClass;\r\n            previousClass = ko.utils.domData.get(element, 'previousClass');\r\n            \r\n            //check to see if a previous class was applied, has changed, and is still on element, then remove\r\n            if (previousClass && previousClass !== iconClass && classes.contains(previousClass)) {\r\n                classes.remove(previousClass);\r\n            }\r\n\r\n            if (!classes.contains(iconClass)) {\r\n                classes.add(iconClass)\r\n            }\r\n\r\n            ko.utils.domData.set(element, 'previousClass', iconClass); \r\n        }\r\n\r\n        if (typeof iconClass === 'object') {\r\n            Object.keys(iconClass).forEach(function(key) {\r\n                iconClass[prefix + '-' + key] = iconClass[key];\r\n                delete iconClass[key];\r\n            });\r\n            \r\n\r\n            Object.keys(iconClass).forEach(function(key){\r\n                if (classes.contains(key) && !ko.unwrap(iconClass[key])) {\r\n                    classes.remove(key);\r\n                 } else if (!classes.contains(key) && ko.unwrap(iconClass[key])) {\r\n                     classes.add(key);\r\n                 }\r\n            });\r\n        }\r\n    }\r\n}\r\n"]}