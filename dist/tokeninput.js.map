{"version":3,"sources":["../src/tokeninput.js"],"names":["bindingHandlers","tokeninputSource","init","element","valueAccessor","allBindings","params","bindings","$selectedElement","value","tokeninputValue","observable","tokeninputUpdating","reinit","getOptions","theme","onResult","onAdd","onDelete","preventDuplicates","minChars","caching","searchDelay","animateDropdown","allowTabOut","noResultsText","searchingText","disabled","unwrap","tokeninputDisable","prePopulate","filter","result","includes","id","tokenInputOptions","results","added","push","deleted","remove","tokenInput","subscribe","update","data","local_data","isDisabled","tokeninputOptions"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEI,mBAAGA,eAAH,CAAmBC,gBAAnB,GAAsC;AAClCC,UAAM,cACFC,OADE,EAEFC,aAFE,EAGFC,WAHE,EAIJ;AACE,YAAIC,SAASF,eAAb;AAAA,YACIG,WAAWF,aADf;AAAA,YAEIG,mBAAmB,sBAAEL,OAAF,CAFvB;AAAA,YAGIM,QAAQF,SAASG,eAAT,IAA4B,mBAAGC,UAAH,EAHxC;AAAA,YAIIC,qBAAqB,KAJzB;AAAA,YAKIC,SAAS,KALb;;AAOA,iBAASC,UAAT,GAAsB;AAClB,mBAAO,oBAAM;AACTC,uBAAO,OADE;AAETC,0BAAUA,QAFD;AAGTC,uBAAOA,KAHE;AAITC,0BAAUA,QAJD;AAKTC,mCAAmB,IALV;AAMTC,0BAAU,CAND;AAOTC,yBAAS,KAPA;AAQTC,6BAAa,CARJ;AASTC,iCAAiB,KATR;AAUTC,6BAAa,IAVJ;AAWTC,+BAAe,IAXN;AAYTC,+BAAe,IAZN;AAaTC,0BAAU,mBAAGC,MAAH,CAAUrB,SAASsB,iBAAnB,CAbD;AAcTC,6BAAaxB,OAAOyB,MAAP,CAAc,UAAUC,MAAV,EAAkB;AACzC,2BAAO,CAACvB,WAAW,EAAZ,EAAgBwB,QAAhB,CAAyBD,OAAOE,EAAhC,CAAP;AACH,iBAFY;AAdJ,aAAN,EAiBJ3B,SAAS4B,iBAjBL,CAAP;AAkBH;;AAED,iBAASnB,QAAT,CAAkBoB,OAAlB,EAA2B;AACvB;AACA,mBAAOA,QAAQL,MAAR,CAAe,UAAUC,MAAV,EAAkB;AACpC,uBAAO,CAACvB,QAAQwB,QAAR,CAAiBD,OAAOE,EAAxB,CAAR;AACH,aAFM,CAAP;AAGH;;AAED,iBAASjB,KAAT,CAAeoB,KAAf,EAAsB;AAClB;AACAzB,iCAAqB,IAArB;AACAH,kBAAM6B,IAAN,CAAWD,MAAMH,EAAjB;AACAtB,iCAAqB,KAArB;AACH;;AAED,iBAASM,QAAT,CAAkBqB,OAAlB,EAA2B;AACvB;AACA,gBAAI1B,MAAJ,EAAY;AACR;AACH;AACDD,iCAAqB,IAArB;AACAH,kBAAM+B,MAAN,CAAaD,QAAQL,EAArB;AACAtB,iCAAqB,KAArB;AACH;;AAED,iBAASV,IAAT,GAAgB;AACZM,6BAAiBiC,UAAjB,CAA4BnC,MAA5B,EAAoCQ,YAApC;AACH;;AAEDZ;;AAEAO,cAAMiC,SAAN,CAAgB,YAAW;AACvB,gBAAG,CAAC9B,kBAAJ,EAAwB;AACpBC,yBAAS,IAAT;AACAL,iCAAiBiC,UAAjB,CAA4B,SAA5B;AACAvC;AACAW,yBAAS,KAAT;AACH;AACJ,SAPD;;AASA;AACA;AACA;AACH,KA5EiC;AA6ElC8B,YAAQ,gBACJxC,OADI,EAEJC,aAFI,EAGJC,WAHI,EAIN;AACE,YAAIC,SAASF,eAAb;AACA;AACA,8BAAED,OAAF,EAAWyC,IAAX,CAAgB,UAAhB,EAA4BC,UAA5B,GAAyCvC,MAAzC;AACH;AArFiC,CAAtC;;AAwFA,mBAAGN,eAAH,CAAmB6B,iBAAnB,GAAuC;AACnCc,YAAQ,gBACJxC,OADI,EAEJC,aAFI,EAGN;AACE,YAAI0C,aAAa1C,eAAjB;;AAEA,8BAAED,OAAF,EAAWsC,UAAX,CAAsB,gBAAtB,EAAwC,mBAAGb,MAAH,CAAUkB,UAAV,CAAxC;AACH;AARkC,CAAvC;;AAWA,mBAAG9C,eAAH,CAAmB+C,iBAAnB,GAAuC,EAAvC","file":"tokeninput.js","sourcesContent":["import { merge } from 'scalejs';\r\nimport $ from 'jquery';\r\nimport ko from 'knockout';\r\nimport _ from 'lodash';\r\nimport 'jquery-tokeninput';\r\nimport 'jquery-tokeninput/styles/token-input.css';\r\n\r\n    ko.bindingHandlers.tokeninputSource = {\r\n        init: function(\r\n            element,\r\n            valueAccessor,\r\n            allBindings\r\n        ) {\r\n            var params = valueAccessor(),\r\n                bindings = allBindings(),\r\n                $selectedElement = $(element),\r\n                value = bindings.tokeninputValue || ko.observable(),\r\n                tokeninputUpdating = false,\r\n                reinit = false;\r\n            \r\n            function getOptions() {\r\n                return merge({ \r\n                    theme: 'pjson', \r\n                    onResult: onResult,\r\n                    onAdd: onAdd,\r\n                    onDelete: onDelete,\r\n                    preventDuplicates: true,\r\n                    minChars: 0,\r\n                    caching: false,\r\n                    searchDelay: 0,\r\n                    animateDropdown: false,\r\n                    allowTabOut: true,\r\n                    noResultsText: null,\r\n                    searchingText: null,\r\n                    disabled: ko.unwrap(bindings.tokeninputDisable),\r\n                    prePopulate: params.filter(function (result) {\r\n                        return (value() || []).includes(result.id);\r\n                    }),\r\n                }, bindings.tokenInputOptions)\r\n            }\r\n            \r\n            function onResult(results) {\r\n                //console.log('Results -->', results);\r\n                return results.filter(function (result) {\r\n                    return !value().includes(result.id);\r\n                });\r\n            }\r\n\r\n            function onAdd(added) {\r\n                //console.log('Add -->', added);\r\n                tokeninputUpdating = true;\r\n                value.push(added.id);\r\n                tokeninputUpdating = false;\r\n            }\r\n\r\n            function onDelete(deleted) {\r\n                //console.log('Delete -->', deleted);\r\n                if (reinit) {\r\n                    return;\r\n                }\r\n                tokeninputUpdating = true;\r\n                value.remove(deleted.id);\r\n                tokeninputUpdating = false;\r\n            }\r\n\r\n            function init() {\r\n                $selectedElement.tokenInput(params, getOptions());\r\n            }\r\n\r\n            init();\r\n\r\n            value.subscribe(function() {\r\n                if(!tokeninputUpdating) {\r\n                    reinit = true;\r\n                    $selectedElement.tokenInput('destroy');\r\n                    init();\r\n                    reinit = false;\r\n                }\r\n            })\r\n            \r\n            // if (options.placeholder) {\r\n            //     $selectedElement.parent().find('input').attr('placeholder', options.placeholder);\r\n            // }\r\n        },\r\n        update: function(\r\n            element,\r\n            valueAccessor,\r\n            allBindings\r\n        ) {\r\n            var params = valueAccessor();\r\n            //console.log('new params-->', params);\r\n            $(element).data('settings').local_data = params;\r\n        }\r\n    }\r\n    \r\n    ko.bindingHandlers.tokeninputDisable = {\r\n        update: function (\r\n            element,\r\n            valueAccessor\r\n        ) {\r\n            let isDisabled = valueAccessor();\r\n\r\n            $(element).tokenInput('toggleDisabled', ko.unwrap(isDisabled));\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.tokeninputOptions = {};\r\n"]}