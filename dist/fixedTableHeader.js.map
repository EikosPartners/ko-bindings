{"version":3,"sources":["../src/fixedTableHeader.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;;;AAEA;;;;;AAKI,mBAAG,eAAH,CAAmB,gBAAnB,GAAsC;AAClC,UAAM,cAAU,OAAV,EAAmB,aAAnB,EAAkC;AACpC,YAAI,SAAS,sBAAE,OAAF,CAAb;AAAA,YACI,UADJ;AAAA,YAEI,QAFJ;AAAA,YAGI,UAAU,eAHd;AAAA,YAII,gBAJJ;;AAMA,iBAAS,aAAT,GAAyB;AACrB,yBAAa,OAAO,IAAP,CAAY,gBAAZ,EAA8B,QAA9B,EAAb;AACA,uBAAW,WAAW,GAAX,CAAe,YAAW;AACjC,uBAAO,OAAO,gBAAP,CAAwB,IAAxB,EAA8B,KAArC;AACH,aAFU,CAAX;;AAIA;AACA,mBAAO,IAAP,CAAY,UAAZ,EAAwB,QAAxB,GAAmC,IAAnC,CAAwC,UAAS,CAAT,EAAY,CAAZ,EAAe;AACnD,sCAAE,CAAF,EAAK,GAAL,CAAS,OAAT,EAAkB,SAAS,CAAT,CAAlB;AACH,aAFD;AAGH;;AAED,8BAAE,MAAF,EAAU,MAAV,CAAiB,aAAjB;AACA,mBAAW,YAAY;AACnB;AACH,SAFD;;AAIA,YAAG,QAAQ,cAAX,EAA2B;AACvB,+BAAmB,sBAAE,OAAF,EAAW,YAAX,EAAnB;AACA,6BAAiB,IAAjB,CAAsB,QAAtB,EAAgC,QAAQ,cAAxC;AACH;;AAED,2BAAG,KAAH,CAAS,eAAT,CAAyB,kBAAzB,CAA4C,OAA5C,EAAqD,YAAW;AAC5D,kCAAE,MAAF,EAAU,MAAV,CAAiB,QAAjB,EAA2B,aAA3B;AACA,gBAAG,QAAQ,cAAX,EAA2B;AACvB,iCAAiB,MAAjB,CAAwB,QAAxB,EAAkC,QAAQ,cAA1C;AACH;AACJ,SALD;AAMH;AApCiC,CAAtC","file":"fixedTableHeader.js","sourcesContent":["import ko from 'knockout';\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * TODO - description\r\n * @module fixedTableHeader\r\n */\r\n\r\n    ko.bindingHandlers.fixedTableHeader = {\r\n        init: function (element, valueAccessor) {\r\n            var $table = $(element),\r\n                $bodyCells,\r\n                colWidth,\r\n                options = valueAccessor(),\r\n                $scrollContainer;\r\n\r\n            function resizeHandler() {\r\n                $bodyCells = $table.find('tbody tr:first').children();\r\n                colWidth = $bodyCells.map(function() {\r\n                    return window.getComputedStyle(this).width;\r\n                });\r\n\r\n                // Set the width of thead columns\r\n                $table.find('thead tr').children().each(function(i, v) {\r\n                    $(v).css('width', colWidth[i]);\r\n                });\r\n            }\r\n\r\n            $(window).resize(resizeHandler);\r\n            setTimeout(function () {\r\n                resizeHandler();\r\n            });\r\n\r\n            if(options.scrollListener) {\r\n                $scrollContainer = $(element).scrollParent();\r\n                $scrollContainer.bind('scroll', options.scrollListener);\r\n            }\r\n\r\n            ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n                $(window).unbind('resize', resizeHandler);\r\n                if(options.scrollListener) {\r\n                    $scrollContainer.unbind('scroll', options.scrollListener);\r\n                }\r\n            });\r\n        }\r\n    }\r\n"]}