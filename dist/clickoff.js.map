{"version":3,"sources":["../src/clickoff.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BI,IAAI,MAAM,kBAAK,MAAL,CAAY,GAAtB;;;;;;;;;;;;;;;AAeA,SAAS,WAAT,CAAqB,OAArB,EAA8B,WAA9B,EAA2C;AACvC,QAAI,YAAJ;AAAA,QAAS,cAAT;AAAA,QAAgB,cAAhB;;;AAGA,WAAO,IAAI,WAAJ,CAAP,EAAyB;;AAErB,YAAI,YAAY,WAAhB,EAA6B;AACzB,mBAAO,KAAP;AACH;;;AAGD,YAAG,IAAI,YAAY,SAAhB,EAA2B,SAA3B,CAAH,EAA0C;AACtC,kBAAM,YAAY,SAAZ,CAAsB,OAAtB,CAA8B,KAA9B,CAAoC,GAApC,CAAN;AACH,SAFD,MAEO;AACH,kBAAM,CAAC,YAAY,SAAZ,IAAyB,EAA1B,EAA8B,KAA9B,CAAoC,GAApC,CAAN;AACH;;AAGD,YAAI,aAAa,SAAb,UAAa,CAAC,KAAD,EAAW;AACxB,mBAAQ,OAAO,KAAP,KAAiB,QAAjB,IAA6B,IAAI,OAAJ,CAAY,KAAZ,IAAqB,CAAC,CAApD,IACC,iBAAiB,OAAjB,IAA4B,MAAM,WAAN,CAAkB,WAAlB,CADpC;AAEH,SAHD;;AAMA,YAAG,iBAAE,IAAF,CAAO,KAAK,QAAZ,EAAsB,UAAtB,CAAH,EAAsC;AAClC,mBAAO,IAAP;AACH;;AAGD,YAAG,iBAAE,IAAF,CAAO,KAAK,QAAZ,EAAsB,UAAtB,CAAH,EAAsC;AAClC,mBAAO,KAAP;AACH;;;AAGD,sBAAc,YAAY,UAA1B;AACH;AACD,WAAO,IAAP;AACH;;;;;;;;;;AAUD,SAAS,IAAT,CAAe,OAAf,EAAwB,aAAxB,EAAuC,WAAvC,EAAoD,SAApD,EAAgE;AAC5D,QAAI,KAAK,eAAT;AAAA,QACI,aAAa,KADjB;AAAA,QAEI,sBAFJ;;AAIA,QAAI,CAAC,IAAI,EAAJ,CAAL,EAAc;AACV;AACH;;;AAGD,QAAI,cAAc,QAAlB,EAA4B;;AAExB,aAAK;AACD,qBAAS,EADR;AAED,sBAAU,GAAG,QAFZ;AAGD,sBAAU,GAAG;AAHZ,SAAL;AAKH;;;AAGD,QAAI,EAAG,GAAG,OAAH,YAAsB,QAAzB,CAAJ,EAAwC;AACpC,cAAM,IAAI,SAAJ,CAAc,qCAAd,CAAN;AACH;;AAED,OAAG,OAAH,GAAa,GAAG,OAAH,CAAW,IAAX,CAAgB,SAAhB,CAAb;;;AAGA,QAAG,CAAC,IAAI,GAAG,QAAP,CAAJ,EAAsB;AAClB,WAAG,QAAH,GAAc,CAAC,UAAD,CAAd;AACH;AACD,QAAG,CAAC,IAAI,GAAG,QAAP,CAAJ,EAAsB;AAClB,WAAG,QAAH,GAAc,CAAC,aAAD,CAAd;AACH;;AAED,oBAAgB,uBAAW,KAAX,EAAmB;AAC/B,YAAI,UAAJ,EAAgB;AAAE;AAAS;AAC3B,YAAI,YAAY,IAAZ,CAAiB,EAAjB,EAAqB,OAArB,EAA8B,MAAM,MAApC,CAAJ,EAAiD;AAC7C,eAAG,OAAH,CAAW,KAAX,CAAiB,IAAjB,EAAuB,CAAC,SAAD,EAAW,CAAC,OAAD,CAAX,CAAvB;AACH;AACJ,KALD;;;AAQA,aAAS,IAAT,CAAc,gBAAd,CAA+B,OAA/B,EAAwC,aAAxC;AACA,uBAAG,KAAH,CAAS,eAAT,CAAyB,kBAAzB,CAA4C,OAA5C,EAAqD,YAAY;AAC7D,qBAAa,IAAb;AACA,iBAAS,IAAT,CAAc,mBAAd,CAAkC,OAAlC,EAA2C,aAA3C;AACH,KAHD;AAIH;;AAED,mBAAG,eAAH,CAAmB,QAAnB,GAA8B;AAC1B,UAAM;AADoB,CAA9B","file":"clickoff.js","sourcesContent":["import core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\n/**\r\n * A knockout binding that is used to allow detection of clicking on another element i.e. \"clicking off\"\r\n * @param {function} clickOff - the function that is called when click off\r\n * @param {object} clickOff - a configuration object with additional parameters to modify the behaviour of click off\r\n * @param {function} clickOff.handler -  the function that is called when click off\r\n * @param {string[]|HTMLElement[]} [clickOff.includes] - an array of class names or html dom elements that when clicked on will invoke the handler\r\n * @param {string[]|HTMLElement[]} [clickOff.excludes] - an array of class names or html dom elements that when clicked on will <strong>not</strong> invoke the handler\r\n * \r\n * @example <caption>Passing a function to value accessor</caption>\r\n * clickOff: function() {\r\n *   alert('it works!');\r\n * }\r\n * @example <caption>Passing an object with includes and excludes</caption>\r\n * clickOff: {\r\n *    handler: function ( ) {\r\n *        alert('it works!');\r\n *    },\r\n *    includes: ['clickOn', 'mainContent'],\r\n *    excludes: ['clickOff', 'titleBar']\r\n * }\r\n * @module clickOff\r\n */\r\n\r\n\r\n    let has = core.object.has;\r\n\r\n    /**\r\n     *\r\n     * 1. click off should be invoked if the click target is not the element\r\n     *    or a child of the element bound to click-off\r\n     * 2. click off should also be invoked if the target or one of the parents\r\n     *    of the target include a class name that matches this.includes\r\n     * 3. the opposite applies for this.excludes\r\n     * @private\r\n     * @param  {HTMLElement} element        the element that has click-off bound to it\r\n     * @param  {HTMLElement} clickTarget    the target of the click\r\n     * @return {boolean}\r\n     */\r\n\r\n    function canClickOff(element, clickTarget) {\r\n        let cls, index, value;\r\n\r\n        //loop from click target to root parent of click target\r\n        while (has(clickTarget)) {\r\n\r\n            if (element === clickTarget) {\r\n                return false;\r\n            }\r\n\r\n            //clickTarget.className.baseVal is the way to get classNames for SVG elements (path, etc)\r\n            if(has(clickTarget.className, 'baseVal')) {\r\n                cls = clickTarget.className.baseVal.split(' ');\r\n            } else {\r\n                cls = (clickTarget.className || '').split(' ');\r\n            }\r\n\r\n\r\n            let filterFunc = (value) => {\r\n                return (typeof value === 'string' && cls.indexOf(value) > -1)\r\n                    || (value instanceof Element && value.isEqualNode(clickTarget));\r\n            }\r\n\r\n\r\n            if(_.some(this.includes, filterFunc)) {\r\n                return true;\r\n            }\r\n\r\n\r\n            if(_.some(this.excludes, filterFunc)) {\r\n                return false;\r\n            }\r\n\r\n            // move up in the dom\r\n            clickTarget = clickTarget.parentNode;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * clickOff binding - A binding that invokes a handler when the user clicks somewhere else\r\n     * @private\r\n     * @param  {HTMLElement} element        the dom element clickOff is bound to\r\n     * @param  {Function} valueAccessor     the options passed to the clickOff binding\r\n     * @param  {type} allBindings           description\r\n     * @param  {type} viewModel             description\r\n     */\r\n    function init( element, valueAccessor, allBindings, viewModel ) {\r\n        let va = valueAccessor(),\r\n            wasRemoved = false,\r\n            eventListener;\r\n\r\n        if (!has(va)) {\r\n            return;\r\n        }\r\n\r\n        // Normalize value accessor\r\n        if (va instanceof Function) {\r\n            // convert function to expected object\r\n            va = {\r\n                handler: va,\r\n                includes: va.includes,\r\n                excludes: va.excludes\r\n            };\r\n        }\r\n\r\n        // enforce handler function\r\n        if (! (va.handler instanceof Function)) {\r\n            throw new TypeError('clickoff: handler function required');\r\n        }\r\n\r\n        va.handler = va.handler.bind(viewModel);\r\n\r\n        // provide defaults for includes and excludes\r\n        if(!has(va.includes)) {\r\n            va.includes = ['clickoff'];\r\n        }\r\n        if(!has(va.excludes)) {\r\n            va.excludes = ['no-clickoff'];\r\n        }\r\n\r\n        eventListener = function ( event ) {\r\n            if (wasRemoved) { return; }\r\n            if (canClickOff.call(va, element, event.target)) {\r\n                va.handler.apply(this, [arguments,[element]]);\r\n            }\r\n        };\r\n\r\n        // add handler to body and create dom removal callback for cleanup\r\n        document.body.addEventListener('click', eventListener);\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n            wasRemoved = true;\r\n            document.body.removeEventListener('click', eventListener);\r\n        });\r\n    }\r\n\r\n    ko.bindingHandlers.clickOff = {\r\n        init: init\r\n    };\r\n"]}