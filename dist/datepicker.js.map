{"version":3,"sources":["../src/datepicker.js"],"names":["clone","object","getTimezoneOffset","date","setTime","getTime","parseDateExpression","ex","Date","parse","indexOf","expression","replace","ret","eval","setDate","setHours","convertDateFormat","d","substring","bindingHandlers","datepicker","init","element","valueAccessor","errorObservable","errorMessage","disableInput","yearRange","format","rawFormat","data","raw","maxDate","unwrap","minDate","utc","picker","previousValue","disableDayFn","disableWeekends","day","isObservable","console","error","undefined","m","getMoment","dateInRange","valid","toDate","getDate","subscribe","document","el","addEventListener","_onMouseDown","onkeydown","event","preventDefault","dateObject","value","getDay","utils","domNodeDisposal","addDisposeCallback","destroy"],"mappings":"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","file":"datepicker.js","sourcesContent":["import core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport Pikaday from 'pikaday';\r\nimport moment from 'moment';\r\n\r\n/**\r\n * TODO - description\r\n * @module datepicker\r\n */\r\n\r\nvar clone = core.object.clone;\r\n\r\nfunction getTimezoneOffset(date) {\r\n    date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n    return date;\r\n}\r\n\r\nfunction parseDateExpression(ex) {\r\n    if (!ex) { return; }\r\n    var date;\r\n\r\n    if (Date.parse(ex)) {\r\n        date = new Date(ex);\r\n    }\r\n\r\n    if (ex === 'currentDate') {\r\n        date = new Date();\r\n    }\r\n\r\n    if (ex.indexOf('currentDate') !== -1) {\r\n        var expression = ex.replace('currentDate', 'new Date().getDate()')\r\n            .replace('yr', '*365'),\r\n            date = new Date(),\r\n            ret = eval(expression);\r\n\r\n        date.setDate(ret);\r\n        date;\r\n    }\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n}\r\n\r\nfunction convertDateFormat(d) {\r\n    return d ? d.substring(0, 2) + '/' +\r\n        d.substring(2, 4) + '/' +\r\n        d.substring(4)\r\n        : '';\r\n}\r\n\r\n\r\nko.bindingHandlers.datepicker = {\r\n    init: function (element, valueAccessor) {\r\n        var date = clone(valueAccessor()),\r\n            errorObservable = date.errorObservable,\r\n            errorMessage = date.errorMessage || 'Date is disabled',\r\n            disableInput = date.disableInput,\r\n            yearRange, format, rawFormat, data, raw,\r\n            maxDate = ko.unwrap(date.maxDate),\r\n            minDate = ko.unwrap(date.minDate),\r\n            utc = date.utc,\r\n            picker,\r\n            previousValue,\r\n            disableDayFn,\r\n            disableWeekends,\r\n            day;\r\n\r\n        if (!ko.isObservable(date.data)) {\r\n            console.error('Datepicker data must be bound to an observable');\r\n            return;\r\n        }\r\n\r\n        data = date.data\r\n\r\n        if (!ko.isObservable(date.raw)) {\r\n            raw = date.data\r\n        } else {\r\n            raw = date.raw\r\n        }\r\n\r\n        date['field'] = element;\r\n\r\n        //defaults\r\n        date['format'] = date['format'] || 'ddd, MMM DD YYYY';\r\n        date['yearRange'] = date['yearRange'] || 100;\r\n        //date['maxDate'] = date['maxDate'];\r\n        //date['minDate'] = date['minDate'];\r\n        rawFormat = date['rawFormat'] || undefined;\r\n        date['disableDayFn'] = date['enabledDate'];\r\n        date['disableWeekends'] = date['disableWeekends'];\r\n        // because date object gets muated by pikaday we lose configurations\r\n        // disableWeekday flag needed for manual user input\r\n        disableWeekends = date.disableWeekends;\r\n        //binding data to observable\r\n        date['onSelect'] = function (d) {\r\n            let m = this.getMoment();\r\n            if (utc) { m = m.utc() }\r\n            raw(m.format(rawFormat));\r\n            errorObservable && errorObservable(null);\r\n        }\r\n\r\n        minDate = parseDateExpression(minDate);\r\n        maxDate = parseDateExpression(maxDate);\r\n\r\n        // remove minDate/maxDate from date picker as it wipes it out (use disableDatFn instead)\r\n        delete date.minDate;\r\n        delete date.maxDate;\r\n\r\n        function dateInRange(d) {\r\n            var valid = true;\r\n            if (minDate) {\r\n                valid = minDate <= d;\r\n            }\r\n            if (maxDate) {\r\n                valid = valid && maxDate >= d;\r\n            }\r\n            return !valid;\r\n        }\r\n\r\n        function setDate(d) {\r\n            var date,\r\n                m;\r\n\r\n            if (!d) {\r\n                date = null;\r\n            } else {\r\n                m = utc ? moment.utc : moment;\r\n                date = m(d).toDate();\r\n            }\r\n            picker.setDate(date, true);\r\n        }\r\n\r\n        if (date['disableDayFn']) {\r\n            if (typeof date['disableDayFn'] !== 'function') {\r\n                day = date['disableDayFn'];\r\n                disableDayFn = function (d) {\r\n                    if (d.getDate() == day) {\r\n                        return dateInRange(d);\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n                date['disableDayFn'] = disableDayFn;\r\n            }\r\n        } else {\r\n            if (minDate || maxDate) {\r\n                disableDayFn = dateInRange;\r\n            }\r\n            date['disableDayFn'] = dateInRange;\r\n        }\r\n\r\n        /* observable setting of min/max date disabled for now till refactor\r\n            if (ko.isObservable(maxDate)) {\r\n                date.maxDate = maxDate();\r\n                maxDate.subscribe(function (mx) {\r\n                    var newDate = parseDateExpression(mx);\r\n                    if (picker.getDate() > newDate) {\r\n                        picker.setDate(null);\r\n                    }\r\n                    picker.setMaxDate(newDate);\r\n                });\r\n            }\r\n            if (ko.isObservable(minDate)) {\r\n                date.minDate = minDate();\r\n                minDate.subscribe(function (mn) {\r\n                    var newDate = parseDateExpression(mn);\r\n                    if (picker.getDate() < newDate) {\r\n                        picker.setDate(null);\r\n                    }\r\n                    picker.setMinDate(newDate);\r\n                });\r\n            }\r\n            */\r\n\r\n        picker = new Pikaday(date)\r\n\r\n        if (typeof data() === 'string') {\r\n            // need to account for timezone offset before\r\n            // date object returns from pikaday, else it's\r\n            // off by one day\r\n            setDate(data());\r\n            // var date = new Date(data());\r\n            //     date = getTimezoneOffset(date);\r\n            //     picker.setDate(date, true);\r\n        } else {\r\n            picker.setDate(data(), true)\r\n        }\r\n\r\n        raw.subscribe(function (d) {\r\n            if (typeof d === 'string') {\r\n                //var date = new Date(d);\r\n                //date = getTimezoneOffset(date);\r\n                //picker.setDate(date, true);\r\n                setDate(d);\r\n            } else {\r\n                picker.setDate(d, true);\r\n            }\r\n        });\r\n\r\n        // this \"workaround\" is necessary for touch screens as pikaday has an issue with it\r\n        // https://github.com/dbushell/Pikaday/issues/406\r\n        if ('ontouchend' in document) {\r\n            picker.el.addEventListener('mousedown', picker._onMouseDown, true);\r\n        }\r\n\r\n        if (disableInput) {\r\n            element.onkeydown = function (event) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        element.addEventListener('blur', function (event) {\r\n            var dateObject;\r\n            // prevent issues with selecting dropdown value on pikaday control\r\n            // by returning if the user did not input a different value\r\n            if (element.value === previousValue) { return; }\r\n            // if the user removes the date, update the input value to blank\r\n            if (element.value === '') {\r\n                data('');\r\n                previousValue = '';\r\n                errorObservable && errorObservable(null);\r\n                return;\r\n            }\r\n            dateObject = new Date(element.value);\r\n            // if the user enters a disabled date on the datepicker, set the customError messahe\r\n            if ((disableDayFn && disableDayFn(dateObject)) || (disableWeekends && [0, 6].indexOf(dateObject.getDay()) !== -1)) {\r\n                //element.value = previousValue; //uncomment if you want disable date to be removed automatically\r\n                errorObservable && errorObservable(errorMessage);\r\n                return;\r\n            } else {\r\n                errorObservable && errorObservable(null);\r\n            }\r\n            // store previous value, fixes bug with selecting year from dropdown\r\n            previousValue = element.value;\r\n            // finally, the user has updated the date and needs to be set\r\n            picker.setDate(element.value);\r\n        });\r\n\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n            picker.destroy();\r\n        });\r\n    }\r\n}\r\n"]}