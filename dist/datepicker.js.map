{"version":3,"sources":["../src/datepicker.js"],"names":["clone","object","getTimezoneOffset","date","setTime","getTime","parseDateExpression","ex","Date","parse","indexOf","expression","replace","ret","eval","setDate","setHours","convertDateFormat","d","substring","bindingHandlers","datepicker","init","element","valueAccessor","errorObservable","errorMessage","disableInput","inputExceptions","exceptions","preventUtcUpdate","yearRange","format","rawFormat","data","raw","maxDate","unwrap","minDate","utc","picker","previousValue","disableDayFn","disableWeekends","day","rawValue","datepickerUpdating","isObservable","console","error","undefined","m","getMoment","document","querySelector","Object","keys","forEach","opt","dateInRange","valid","utcOffset","add","toDate","getDate","subscribe","el","addEventListener","_onMouseDown","onkeydown","event","keyCode","preventDefault","value","isValid","dateObject","getDay","utils","domNodeDisposal","addDisposeCallback","destroy"],"mappings":"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","file":"datepicker.js","sourcesContent":["import core from 'scalejs.core';\r\nimport ko from 'knockout';\r\nimport Pikaday from 'pikaday-time';\r\nimport moment from 'moment';\r\n\r\n/**\r\n * TODO - description\r\n * @module datepicker\r\n */\r\n\r\nvar clone = core.object.clone;\r\n\r\nfunction getTimezoneOffset(date) {\r\n    date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n    return date;\r\n}\r\n\r\nfunction parseDateExpression(ex) {\r\n    if (!ex) { return; }\r\n    var date;\r\n\r\n    if (Date.parse(ex)) {\r\n        date = new Date(ex);\r\n    }\r\n\r\n    if (ex === 'currentDate') {\r\n        date = new Date();\r\n    }\r\n\r\n    if (ex.indexOf('currentDate') !== -1) {\r\n        var expression = ex.replace('currentDate', 'new Date().getDate()')\r\n            .replace('yr', '*365'),\r\n            date = new Date(),\r\n            ret = eval(expression);\r\n\r\n        date.setDate(ret);\r\n        date;\r\n    }\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n}\r\n\r\nfunction convertDateFormat(d) {\r\n    return d ? d.substring(0, 2) + '/' +\r\n        d.substring(2, 4) + '/' +\r\n        d.substring(4)\r\n        : '';\r\n}\r\n\r\n\r\nko.bindingHandlers.datepicker = {\r\n    init: function (element, valueAccessor) {\r\n        var date = clone(valueAccessor()),\r\n            errorObservable = date.errorObservable,\r\n            errorMessage = date.errorMessage || 'Date is disabled',\r\n            disableInput = date.disableInput,\r\n            inputExceptions = disableInput && disableInput.exceptions,\r\n            preventUtcUpdate = date.preventUtcUpdate,\r\n            yearRange, format, rawFormat, data, raw,\r\n            maxDate = ko.unwrap(date.maxDate),\r\n            minDate = ko.unwrap(date.minDate),\r\n            utc = date.utc,\r\n            picker,\r\n            previousValue,\r\n            disableDayFn,\r\n            disableWeekends,\r\n            day,\r\n            rawValue,\r\n            datepickerUpdating;\r\n\r\n        if (!ko.isObservable(date.data)) {\r\n            console.error('Datepicker data must be bound to an observable');\r\n            return;\r\n        }\r\n\r\n        data = date.data\r\n\r\n        if (!ko.isObservable(date.raw)) {\r\n            raw = date.data\r\n        } else {\r\n            raw = date.raw\r\n        }\r\n\r\n        date['field'] = element;\r\n\r\n        //defaults\r\n        date['format'] = date['format'] || 'ddd, MMM DD YYYY';\r\n        date['yearRange'] = date['yearRange'] || 100;\r\n        //date['maxDate'] = date['maxDate'];\r\n        //date['minDate'] = date['minDate'];\r\n        rawFormat = date['rawFormat'] || undefined;\r\n        date['disableDayFn'] = date['enabledDate'];\r\n        date['disableWeekends'] = date['disableWeekends'];\r\n        // because date object gets muated by pikaday we lose configurations\r\n        // disableWeekday flag needed for manual user input\r\n        disableWeekends = date.disableWeekends;\r\n        //binding data to observable\r\n        date['onSelect'] = function (d) {\r\n            let m = this.getMoment();\r\n            if (utc) { m = m.utc() }\r\n            rawValue = m.format(rawFormat);\r\n            datepickerUpdating = true;\r\n            raw(rawValue);\r\n            datepickerUpdating = false;\r\n            errorObservable && errorObservable(null);\r\n        };\r\n         date['container'] = document.querySelector(date['container']);\r\n\r\n        if (date['datepickerOptions']) {\r\n            Object.keys(date['datepickerOptions']).forEach((opt) => {\r\n                date[opt] = date['datepickerOptions'][opt];\r\n            });\r\n        }\r\n        delete date['datepickerOptions']\r\n\r\n        minDate = parseDateExpression(minDate);\r\n        maxDate = parseDateExpression(maxDate);\r\n\r\n        // remove minDate/maxDate from date picker as it wipes it out (use disableDatFn instead)\r\n        delete date.minDate;\r\n        delete date.maxDate;\r\n\r\n        function dateInRange(d) {\r\n            var valid = true;\r\n            if (minDate) {\r\n                valid = minDate <= d;\r\n            }\r\n            if (maxDate) {\r\n                valid = valid && maxDate >= d;\r\n            }\r\n            return !valid;\r\n        }\r\n\r\n        function setDate(d) {\r\n            var date,\r\n                m;\r\n\r\n            if (!d) {\r\n                date = null;\r\n            } else {\r\n                m = utc ? moment.utc : moment;\r\n                if (preventUtcUpdate) {\r\n                    var utcOffset = new Date(d).getTimezoneOffset();\r\n                    d = moment.utc(d).add(utcOffset, 'minutes').format();\r\n                }\r\n                date = m(d).toDate();\r\n            }\r\n            picker.setDate(date, true);\r\n        }\r\n\r\n        if (date['disableDayFn']) {\r\n            if (typeof date['disableDayFn'] !== 'function') {\r\n                day = date['disableDayFn'];\r\n                disableDayFn = function (d) {\r\n                    if (d.getDate() == day) {\r\n                        return dateInRange(d);\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n                date['disableDayFn'] = disableDayFn;\r\n            }\r\n        } else {\r\n            if (minDate || maxDate) {\r\n                disableDayFn = dateInRange;\r\n            }\r\n            date['disableDayFn'] = dateInRange;\r\n        }\r\n\r\n        /* observable setting of min/max date disabled for now till refactor\r\n            if (ko.isObservable(maxDate)) {\r\n                date.maxDate = maxDate();\r\n                maxDate.subscribe(function (mx) {\r\n                    var newDate = parseDateExpression(mx);\r\n                    if (picker.getDate() > newDate) {\r\n                        picker.setDate(null);\r\n                    }\r\n                    picker.setMaxDate(newDate);\r\n                });\r\n            }\r\n            if (ko.isObservable(minDate)) {\r\n                date.minDate = minDate();\r\n                minDate.subscribe(function (mn) {\r\n                    var newDate = parseDateExpression(mn);\r\n                    if (picker.getDate() < newDate) {\r\n                        picker.setDate(null);\r\n                    }\r\n                    picker.setMinDate(newDate);\r\n                });\r\n            }\r\n            */\r\n\r\n        picker = new Pikaday(date)\r\n\r\n        if (typeof data() === 'string') {\r\n            // need to account for timezone offset before\r\n            // date object returns from pikaday, else it's\r\n            // off by one day\r\n            setDate(data());\r\n            // var date = new Date(data());\r\n            //     date = getTimezoneOffset(date);\r\n            //     picker.setDate(date, true);\r\n        } else {\r\n            picker.setDate(data(), true)\r\n        }\r\n\r\n        raw.subscribe(function (d) {\r\n            if (d === rawValue) { return; }\r\n            if( !datepickerUpdating) { rawValue = d; }\r\n            if (typeof d === 'string') {\r\n                //var date = new Date(d);\r\n                //date = getTimezoneOffset(date);\r\n                //picker.setDate(date, true);\r\n                setDate(d);\r\n            } else {\r\n                picker.setDate(d, true);\r\n            }\r\n        });\r\n\r\n        // this \"workaround\" is necessary for touch screens as pikaday has an issue with it\r\n        // https://github.com/dbushell/Pikaday/issues/406\r\n        if ('ontouchend' in document) {\r\n            picker.el.addEventListener('mousedown', picker._onMouseDown, true);\r\n        }\r\n\r\n        if (disableInput) {\r\n           element.onkeydown = function (event) {\r\n                if (inputExceptions) {\r\n                    if (inputExceptions.indexOf(event.keyCode) === -1) {\r\n                        event.preventDefault();\r\n                    }\r\n                } else {\r\n                    event.preventDefault();\r\n                }\r\n            };\r\n             if (inputExceptions) {\r\n                element.addEventListener('blur', function (event) {\r\n                    if (element.value === '' || !(moment(element.value, date.format).isValid())) {\r\n                        data('');\r\n                        previousValue = '';\r\n                        errorObservable && errorObservable(null);\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            /* When using these options: \r\n                rawFormat: 'YYYY-MM-DDTHH:mm:ss[Z]',\r\n                format: 'DD MMMM YYYY, hh:mm A [GMT]',\r\n                utc: true\r\n            we run into the issue where the blur handler updates the date incorrectly.\r\n            Temporarily resolved by removing event handler for disabled inputs, since \r\n            we currently don't need blur in this project.\r\n             */\r\n            element.addEventListener('blur', function (event) {\r\n                var dateObject;\r\n                // prevent issues with selecting dropdown value on pikaday control\r\n                // by returning if the user did not input a different value\r\n                if (element.value === previousValue) { return; }\r\n                // if the user removes the date, update the input value to blank\r\n                if (element.value === '') {\r\n                    data('');\r\n                    previousValue = '';\r\n                    errorObservable && errorObservable(null);\r\n                    return;\r\n                }\r\n                dateObject = new Date(element.value);\r\n                // if the user enters a disabled date on the datepicker, set the customError messahe\r\n                if ((disableDayFn && disableDayFn(dateObject)) || (disableWeekends && [0, 6].indexOf(dateObject.getDay()) !== -1)) {\r\n                    //element.value = previousValue; //uncomment if you want disable date to be removed automatically\r\n                    errorObservable && errorObservable(errorMessage);\r\n                    return;\r\n                } else {\r\n                    errorObservable && errorObservable(null);\r\n                }\r\n                // store previous value, fixes bug with selecting year from dropdown\r\n                previousValue = element.value;\r\n                // finally, the user has updated the date and needs to be set\r\n                picker.setDate(element.value);\r\n            });\r\n        }\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n            picker.destroy();\r\n        });\r\n    }\r\n}\r\n"]}