{"version":3,"sources":["../src/fontIcon.js"],"names":["bindingHandlers","fontIcon","init","element","valueAccessor","prefix","classList","contains","add","update","iconClass","classes","previousClass","utils","domData","get","remove","set","Object","keys","forEach","key","unwrap"],"mappings":";;;;AAAA;;AACA;;;;;;AAEA,mBAAGA,eAAH,CAAmBC,QAAnB,GAA8B;AAC1BC,UAAM,cAAUC,OAAV,EAAmBC,aAAnB,EAAkC;AACpC,YAAIC,SAAS,+BAAiB,aAAjB,KAAmC,IAAhD;;AAEA,YAAIA,UAAU,CAACF,QAAQG,SAAR,CAAkBC,QAAlB,CAA2BF,MAA3B,CAAf,EAAmD;AAC/CF,oBAAQG,SAAR,CAAkBE,GAAlB,CAAsBH,MAAtB;AACH;AACJ,KAPyB;AAQ1BI,YAAQ,gBAAUN,OAAV,EAAmBC,aAAnB,EAAkC;AACtC,YAAIC,SAAS,+BAAiB,aAAjB,KAAmC,IAAhD;AACA,YAAIK,YAAYN,eAAhB;AACA,YAAIO,UAAUR,QAAQG,SAAtB;AACA,YAAIM,sBAAJ;;AAEA,YAAI,OAAOF,SAAP,KAAqB,QAAzB,EAAmC;AAC/BA,wBAAYL,SAAS,GAAT,GAAeK,SAA3B;AACAE,4BAAgB,mBAAGC,KAAH,CAASC,OAAT,CAAiBC,GAAjB,CAAqBZ,OAArB,EAA8B,eAA9B,CAAhB;;AAEA;AACA,gBAAIS,iBAAiBA,kBAAkBF,SAAnC,IAAgDC,QAAQJ,QAAR,CAAiBK,aAAjB,CAApD,EAAqF;AACjFD,wBAAQK,MAAR,CAAeJ,aAAf;AACH;;AAED,gBAAI,CAACD,QAAQJ,QAAR,CAAiBG,SAAjB,CAAL,EAAkC;AAC9BC,wBAAQH,GAAR,CAAYE,SAAZ;AACH;;AAED,+BAAGG,KAAH,CAASC,OAAT,CAAiBG,GAAjB,CAAqBd,OAArB,EAA8B,eAA9B,EAA+CO,SAA/C;AACH;;AAED,YAAI,QAAOA,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC;AAC/BQ,mBAAOC,IAAP,CAAYT,SAAZ,EAAuBU,OAAvB,CAA+B,UAASC,GAAT,EAAc;AACzCX,0BAAUL,SAAS,GAAT,GAAegB,GAAzB,IAAgCX,UAAUW,GAAV,CAAhC;AACA,uBAAOX,UAAUW,GAAV,CAAP;AACH,aAHD;;AAMAH,mBAAOC,IAAP,CAAYT,SAAZ,EAAuBU,OAAvB,CAA+B,UAASC,GAAT,EAAa;AACxC,oBAAIV,QAAQJ,QAAR,CAAiBc,GAAjB,KAAyB,CAAC,mBAAGC,MAAH,CAAUZ,UAAUW,GAAV,CAAV,CAA9B,EAAyD;AACrDV,4BAAQK,MAAR,CAAeK,GAAf;AACF,iBAFF,MAEQ,IAAI,CAACV,QAAQJ,QAAR,CAAiBc,GAAjB,CAAD,IAA0B,mBAAGC,MAAH,CAAUZ,UAAUW,GAAV,CAAV,CAA9B,EAAyD;AAC5DV,4BAAQH,GAAR,CAAYa,GAAZ;AACH;AACL,aAND;AAOH;AACJ;AA7CyB,CAA9B","file":"fontIcon.js","sourcesContent":["import { globalMetadata } from 'scalejs.metadataFactory';\nimport ko from 'knockout';\n\nko.bindingHandlers.fontIcon = {\n    init: function (element, valueAccessor) {\n        let prefix = globalMetadata()['font-prefix'] || 'fa';\n\n        if (prefix && !element.classList.contains(prefix)) {\n            element.classList.add(prefix);\n        }\n    },\n    update: function (element, valueAccessor) {\n        let prefix = globalMetadata()['font-prefix'] || 'fa';\n        let iconClass = valueAccessor();\n        let classes = element.classList;\n        let previousClass;\n\n        if (typeof iconClass === 'string') {\n            iconClass = prefix + '-' + iconClass;\n            previousClass = ko.utils.domData.get(element, 'previousClass');\n            \n            //check to see if a previous class was applied, has changed, and is still on element, then remove\n            if (previousClass && previousClass !== iconClass && classes.contains(previousClass)) {\n                classes.remove(previousClass);\n            }\n\n            if (!classes.contains(iconClass)) {\n                classes.add(iconClass)\n            }\n\n            ko.utils.domData.set(element, 'previousClass', iconClass); \n        }\n\n        if (typeof iconClass === 'object') {\n            Object.keys(iconClass).forEach(function(key) {\n                iconClass[prefix + '-' + key] = iconClass[key];\n                delete iconClass[key];\n            });\n            \n\n            Object.keys(iconClass).forEach(function(key){\n                if (classes.contains(key) && !ko.unwrap(iconClass[key])) {\n                    classes.remove(key);\n                 } else if (!classes.contains(key) && ko.unwrap(iconClass[key])) {\n                     classes.add(key);\n                 }\n            });\n        }\n    }\n}\n"]}