{"version":3,"sources":["../src/clickOrEnter.js"],"names":["bindingHandlers","clickOrEnter","init","element","valueAccessor","allBindingsAccessor","viewModel","allBindings","keyup","event","keyCode","which","call","click","utils","domNodeDisposal","addDisposeCallback","unbind"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA;;;;;AAKA,mBAAGA,eAAH,CAAmBC,YAAnB,GAAkC;AAC1BC,UAAM,cAAUC,OAAV,EAAmBC,aAAnB,EAAkCC,mBAAlC,EAAuDC,SAAvD,EAAkE;AACpE,YAAIC,cAAcF,qBAAlB;AACA,iBAASG,KAAT,CAAeC,KAAf,EAAsB;AAClB,gBAAIC,UAAWD,MAAME,KAAN,GAAcF,MAAME,KAApB,GAA4BF,MAAMC,OAAjD;AACA,gBAAIA,YAAY,EAAZ,IAAkBA,YAAY,EAAlC,EAAsC;AAClCH,4BAAYN,YAAZ,CAAyBW,IAAzB,CAA8BN,SAA9B;AACA,uBAAO,KAAP;AACH;AACD,mBAAO,IAAP;AACH;AACD,iBAASO,KAAT,GAAiB;AACbN,wBAAYN,YAAZ,CAAyBW,IAAzB,CAA8BN,SAA9B;AACA,mBAAO,KAAP;AACH;;AAED,8BAAEH,OAAF,EAAWK,KAAX,CAAiBA,KAAjB;AACA,8BAAEL,OAAF,EAAWU,KAAX,CAAiBA,KAAjB;;AAEA,2BAAGC,KAAH,CAASC,eAAT,CAAyBC,kBAAzB,CAA4Cb,OAA5C,EAAqD,YAAW;AAC7D,kCAAEA,OAAF,EAAWc,MAAX,CAAkB,OAAlB,EAA2BT,KAA3B;AACA,kCAAEL,OAAF,EAAWc,MAAX,CAAkB,OAAlB,EAA2BJ,KAA3B;AACF,SAHD;AAIJ;AAvB0B,CAAlC","file":"clickOrEnter.js","sourcesContent":["import ko from 'knockout';\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * TODO - description\r\n * @module clickOrEnter\r\n */\r\n\r\nko.bindingHandlers.clickOrEnter = {\r\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\r\n            var allBindings = allBindingsAccessor();\r\n            function keyup(event) {\r\n                var keyCode = (event.which ? event.which : event.keyCode);\r\n                if (keyCode === 13 || keyCode === 32) {\r\n                    allBindings.clickOrEnter.call(viewModel);\r\n                    return false;\r\n                }\r\n                return true;             \r\n            }\r\n            function click() {\r\n                allBindings.clickOrEnter.call(viewModel);\r\n                return false;\r\n            }\r\n            \r\n            $(element).keyup(keyup);\r\n            $(element).click(click);\r\n            \r\n            ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\r\n               $(element).unbind('keyup', keyup);\r\n               $(element).unbind('click', click)\r\n            });\r\n       }\r\n    };\r\n"]}