{"version":3,"sources":["../src/datepicker.js"],"names":["clone","object","getTimezoneOffset","date","setTime","getTime","parseDateExpression","ex","Date","parse","indexOf","expression","replace","ret","eval","setDate","setHours","convertDateFormat","d","substring","bindingHandlers","datepicker","init","element","valueAccessor","errorObservable","errorMessage","disableInput","yearRange","format","rawFormat","data","raw","maxDate","unwrap","minDate","utc","picker","previousValue","disableDayFn","disableWeekends","day","isObservable","console","error","undefined","m","getMoment","document","querySelector","Object","keys","forEach","opt","dateInRange","valid","toDate","getDate","subscribe","el","addEventListener","_onMouseDown","onkeydown","event","preventDefault","dateObject","value","getDay","utils","domNodeDisposal","addDisposeCallback","destroy"],"mappings":"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","file":"datepicker.js","sourcesContent":["import core from 'scalejs.core';\nimport ko from 'knockout';\nimport Pikaday from 'pikaday-time';\nimport moment from 'moment';\n\n/**\n * TODO - description\n * @module datepicker\n */\n\nvar clone = core.object.clone;\n\nfunction getTimezoneOffset(date) {\n    date.setTime(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n    return date;\n}\n\nfunction parseDateExpression(ex) {\n    if (!ex) { return; }\n    var date;\n\n    if (Date.parse(ex)) {\n        date = new Date(ex);\n    }\n\n    if (ex === 'currentDate') {\n        date = new Date();\n    }\n\n    if (ex.indexOf('currentDate') !== -1) {\n        var expression = ex.replace('currentDate', 'new Date().getDate()')\n            .replace('yr', '*365'),\n            date = new Date(),\n            ret = eval(expression);\n\n        date.setDate(ret);\n        date;\n    }\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\n\nfunction convertDateFormat(d) {\n    return d ? d.substring(0, 2) + '/' +\n        d.substring(2, 4) + '/' +\n        d.substring(4)\n        : '';\n}\n\n\nko.bindingHandlers.datepicker = {\n    init: function (element, valueAccessor) {\n        var date = clone(valueAccessor()),\n            errorObservable = date.errorObservable,\n            errorMessage = date.errorMessage || 'Date is disabled',\n            disableInput = date.disableInput,\n            yearRange, format, rawFormat, data, raw,\n            maxDate = ko.unwrap(date.maxDate),\n            minDate = ko.unwrap(date.minDate),\n            utc = date.utc,\n            picker,\n            previousValue,\n            disableDayFn,\n            disableWeekends,\n            day;\n\n        if (!ko.isObservable(date.data)) {\n            console.error('Datepicker data must be bound to an observable');\n            return;\n        }\n\n        data = date.data\n\n        if (!ko.isObservable(date.raw)) {\n            raw = date.data\n        } else {\n            raw = date.raw\n        }\n\n        date['field'] = element;\n\n        //defaults\n        date['format'] = date['format'] || 'ddd, MMM DD YYYY';\n        date['yearRange'] = date['yearRange'] || 100;\n        //date['maxDate'] = date['maxDate'];\n        //date['minDate'] = date['minDate'];\n        rawFormat = date['rawFormat'] || undefined;\n        date['disableDayFn'] = date['enabledDate'];\n        date['disableWeekends'] = date['disableWeekends'];\n        // because date object gets muated by pikaday we lose configurations\n        // disableWeekday flag needed for manual user input\n        disableWeekends = date.disableWeekends;\n        //binding data to observable\n        date['onSelect'] = function (d) {\n            let m = this.getMoment();\n            if (utc) { m = m.utc() }\n            raw(m.format(rawFormat));\n            errorObservable && errorObservable(null);\n        };\n         date['container'] = document.querySelector(date['container']);\n\n        if (date['datepickerOptions']) {\n            Object.keys(date['datepickerOptions']).forEach((opt) => {\n                date[opt] = date['datepickerOptions'][opt];\n            });\n        }\n        delete date['datepickerOptions']\n\n        minDate = parseDateExpression(minDate);\n        maxDate = parseDateExpression(maxDate);\n\n        // remove minDate/maxDate from date picker as it wipes it out (use disableDatFn instead)\n        delete date.minDate;\n        delete date.maxDate;\n\n        function dateInRange(d) {\n            var valid = true;\n            if (minDate) {\n                valid = minDate <= d;\n            }\n            if (maxDate) {\n                valid = valid && maxDate >= d;\n            }\n            return !valid;\n        }\n\n        function setDate(d) {\n            var date,\n                m;\n\n            if (!d) {\n                date = null;\n            } else {\n                m = utc ? moment.utc : moment;\n                date = m(d).toDate();\n            }\n            picker.setDate(date, true);\n        }\n\n        if (date['disableDayFn']) {\n            if (typeof date['disableDayFn'] !== 'function') {\n                day = date['disableDayFn'];\n                disableDayFn = function (d) {\n                    if (d.getDate() == day) {\n                        return dateInRange(d);\n                    } else {\n                        return true;\n                    }\n                }\n                date['disableDayFn'] = disableDayFn;\n            }\n        } else {\n            if (minDate || maxDate) {\n                disableDayFn = dateInRange;\n            }\n            date['disableDayFn'] = dateInRange;\n        }\n\n        /* observable setting of min/max date disabled for now till refactor\n            if (ko.isObservable(maxDate)) {\n                date.maxDate = maxDate();\n                maxDate.subscribe(function (mx) {\n                    var newDate = parseDateExpression(mx);\n                    if (picker.getDate() > newDate) {\n                        picker.setDate(null);\n                    }\n                    picker.setMaxDate(newDate);\n                });\n            }\n            if (ko.isObservable(minDate)) {\n                date.minDate = minDate();\n                minDate.subscribe(function (mn) {\n                    var newDate = parseDateExpression(mn);\n                    if (picker.getDate() < newDate) {\n                        picker.setDate(null);\n                    }\n                    picker.setMinDate(newDate);\n                });\n            }\n            */\n\n        picker = new Pikaday(date)\n\n        if (typeof data() === 'string') {\n            // need to account for timezone offset before\n            // date object returns from pikaday, else it's\n            // off by one day\n            setDate(data());\n            // var date = new Date(data());\n            //     date = getTimezoneOffset(date);\n            //     picker.setDate(date, true);\n        } else {\n            picker.setDate(data(), true)\n        }\n\n        raw.subscribe(function (d) {\n            if (typeof d === 'string') {\n                //var date = new Date(d);\n                //date = getTimezoneOffset(date);\n                //picker.setDate(date, true);\n                setDate(d);\n            } else {\n                picker.setDate(d, true);\n            }\n        });\n\n        // this \"workaround\" is necessary for touch screens as pikaday has an issue with it\n        // https://github.com/dbushell/Pikaday/issues/406\n        if ('ontouchend' in document) {\n            picker.el.addEventListener('mousedown', picker._onMouseDown, true);\n        }\n\n        if (disableInput) {\n            element.onkeydown = function (event) {\n                event.preventDefault();\n            }\n        } else {\n            /* When using these options: \n                rawFormat: 'YYYY-MM-DDTHH:mm:ss[Z]',\n                format: 'DD MMMM YYYY, hh:mm A [GMT]',\n                utc: true\n            we run into the issue where the blur handler updates the date incorrectly.\n            Temporarily resolved by removing event handler for disabled inputs, since \n            we currently don't need blur in this project.\n             */\n            element.addEventListener('blur', function (event) {\n                var dateObject;\n                // prevent issues with selecting dropdown value on pikaday control\n                // by returning if the user did not input a different value\n                if (element.value === previousValue) { return; }\n                // if the user removes the date, update the input value to blank\n                if (element.value === '') {\n                    data('');\n                    previousValue = '';\n                    errorObservable && errorObservable(null);\n                    return;\n                }\n                dateObject = new Date(element.value);\n                // if the user enters a disabled date on the datepicker, set the customError messahe\n                if ((disableDayFn && disableDayFn(dateObject)) || (disableWeekends && [0, 6].indexOf(dateObject.getDay()) !== -1)) {\n                    //element.value = previousValue; //uncomment if you want disable date to be removed automatically\n                    errorObservable && errorObservable(errorMessage);\n                    return;\n                } else {\n                    errorObservable && errorObservable(null);\n                }\n                // store previous value, fixes bug with selecting year from dropdown\n                previousValue = element.value;\n                // finally, the user has updated the date and needs to be set\n                picker.setDate(element.value);\n            });\n        }\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n            picker.destroy();\n        });\n    }\n}\n"]}